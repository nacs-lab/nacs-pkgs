From b6d69e9873d26b433578c36411def6798f61221b Mon Sep 17 00:00:00 2001
From: Yichao Yu <yyc1992@gmail.com>
Date: Sun, 24 Feb 2019 21:03:18 -0500
Subject: [PATCH] Use vector calling convention

---
 src/arch/helperavx.h          |  7 +++++++
 src/arch/helperavx2.h         |  7 +++++++
 src/arch/helperavx2_128.h     |  7 +++++++
 src/arch/helperavx512f.h      |  7 +++++++
 src/arch/helperpurec.h        | 18 ++++++++++++++++++
 src/arch/helperpurec_scalar.h |  7 +++++++
 src/arch/helpersse2.h         |  7 +++++++
 src/common/misc.h             |  2 +-
 src/libm/mkalias.c            | 12 +++++++-----
 src/libm/mkrename.c           |  2 +-
 src/libm/sleefsimddp.c        | 10 +++++-----
 src/libm/sleefsimdsp.c        |  8 ++++----
 12 files changed, 78 insertions(+), 16 deletions(-)

diff --git a/src/arch/helperavx.h b/src/arch/helperavx.h
index 823fd01..c17c3f0 100644
--- a/src/arch/helperavx.h
+++ b/src/arch/helperavx.h
@@ -39,6 +39,13 @@
 #include <stdint.h>
 #include "misc.h"
 
+#define SUFFIX_D1 "@@32"
+#define SUFFIX_D2 "@@64"
+#define SUFFIX_D3 "@@96"
+#define SUFFIX_F1 "@@32"
+#define SUFFIX_F2 "@@64"
+#define SUFFIX_F3 "@@96"
+
 typedef __m256i vmask;
 typedef __m256i vopmask;
 
diff --git a/src/arch/helperavx2.h b/src/arch/helperavx2.h
index 492c1df..6c7a2b8 100644
--- a/src/arch/helperavx2.h
+++ b/src/arch/helperavx2.h
@@ -36,6 +36,13 @@
 #include <stdint.h>
 #include "misc.h"
 
+#define SUFFIX_D1 "@@32"
+#define SUFFIX_D2 "@@64"
+#define SUFFIX_D3 "@@96"
+#define SUFFIX_F1 "@@32"
+#define SUFFIX_F2 "@@64"
+#define SUFFIX_F3 "@@96"
+
 typedef __m256i vmask;
 typedef __m256i vopmask;
 
diff --git a/src/arch/helperavx2_128.h b/src/arch/helperavx2_128.h
index d170a9b..ef046c2 100644
--- a/src/arch/helperavx2_128.h
+++ b/src/arch/helperavx2_128.h
@@ -36,6 +36,13 @@
 #include <stdint.h>
 #include "misc.h"
 
+#define SUFFIX_D1 "@@16"
+#define SUFFIX_D2 "@@32"
+#define SUFFIX_D3 "@@48"
+#define SUFFIX_F1 "@@16"
+#define SUFFIX_F2 "@@32"
+#define SUFFIX_F3 "@@48"
+
 typedef __m128i vmask;
 typedef __m128i vopmask;
 
diff --git a/src/arch/helperavx512f.h b/src/arch/helperavx512f.h
index b411b43..d329f63 100644
--- a/src/arch/helperavx512f.h
+++ b/src/arch/helperavx512f.h
@@ -39,6 +39,13 @@
 #include <stdint.h>
 #include "misc.h"
 
+#define SUFFIX_D1 "@@64"
+#define SUFFIX_D2 "@@128"
+#define SUFFIX_D3 "@@192"
+#define SUFFIX_F1 "@@64"
+#define SUFFIX_F2 "@@128"
+#define SUFFIX_F3 "@@192"
+
 typedef __m512i vmask;
 typedef __mmask16 vopmask;
 
diff --git a/src/arch/helperpurec.h b/src/arch/helperpurec.h
index 65f0d7c..ed0cacb 100644
--- a/src/arch/helperpurec.h
+++ b/src/arch/helperpurec.h
@@ -24,6 +24,24 @@
 #define DFTPRIORITY LOG2VECTLENDP
 #define ISANAME "Pure C Array"
 
+#if CONFIG == 1
+#  define SUFFIX_D1 "@@8"
+#  define SUFFIX_D2 "@@16"
+#  define SUFFIX_D3 "@@24"
+#  define SUFFIX_F1 "@@8"
+#  define SUFFIX_F2 "@@16"
+#  define SUFFIX_F3 "@@24"
+#elseif CONFIG == 2
+#  define SUFFIX_D1 "@@16"
+#  define SUFFIX_D2 "@@32"
+#  define SUFFIX_D3 "@@48"
+#  define SUFFIX_F1 "@@16"
+#  define SUFFIX_F2 "@@32"
+#  define SUFFIX_F3 "@@48"
+#else
+#  error CONFIG out of range
+#endif
+
 typedef union {
   uint32_t u[VECTLENDP*2];
   uint64_t x[VECTLENDP];
diff --git a/src/arch/helperpurec_scalar.h b/src/arch/helperpurec_scalar.h
index cd86bc4..8867708 100644
--- a/src/arch/helperpurec_scalar.h
+++ b/src/arch/helperpurec_scalar.h
@@ -74,6 +74,13 @@
 
 #define DFTPRIORITY LOG2VECTLENDP
 
+#define SUFFIX_D1 "@@8"
+#define SUFFIX_D2 "@@16"
+#define SUFFIX_D3 "@@24"
+#define SUFFIX_F1 "@@8"
+#define SUFFIX_F2 "@@16"
+#define SUFFIX_F3 "@@24"
+
 typedef union {
   uint32_t u[2];
   int32_t i[2];
diff --git a/src/arch/helpersse2.h b/src/arch/helpersse2.h
index 1bcdbf4..ac5845b 100644
--- a/src/arch/helpersse2.h
+++ b/src/arch/helpersse2.h
@@ -44,6 +44,13 @@
 #include <stdint.h>
 #include "misc.h"
 
+#define SUFFIX_D1 "@@16"
+#define SUFFIX_D2 "@@32"
+#define SUFFIX_D3 "@@48"
+#define SUFFIX_F1 "@@16"
+#define SUFFIX_F2 "@@32"
+#define SUFFIX_F3 "@@48"
+
 typedef __m128i vmask;
 typedef __m128i vopmask;
 
diff --git a/src/common/misc.h b/src/common/misc.h
index 79e0c32..92c3217 100644
--- a/src/common/misc.h
+++ b/src/common/misc.h
@@ -330,5 +330,5 @@ typedef union {
 #ifdef ENABLE_AAVPCS
 #define VECTOR_CC __attribute__((aarch64_vector_pcs))
 #else
-#define VECTOR_CC
+#define VECTOR_CC __attribute__((vectorcall))
 #endif
diff --git a/src/libm/mkalias.c b/src/libm/mkalias.c
index 97c12b2..87782e2 100644
--- a/src/libm/mkalias.c
+++ b/src/libm/mkalias.c
@@ -24,7 +24,7 @@ int main(int argc, char **argv) {
   char *mangledisa = argv[4];
   char *isaname = argc == 6 ? argv[5] : "";
 
-  char * vectorcc="";
+  char * vectorcc=" __attribute__((vectorcall))";
 #ifdef ENABLE_AAVPCS
   if (strcmp(isaname, "advsimd") == 0)
     vectorcc =" __attribute__((aarch64_vector_pcs))";
@@ -85,18 +85,20 @@ int main(int argc, char **argv) {
   if (argc == 6) {
     for(int i=0;funcList[i].name != NULL;i++) {
       if (funcList[i].ulp >= 0) {
-	printf("EXPORT CONST %s Sleef_%s%s%d_u%02d(%s) __attribute__((alias(\"Sleef_%s%s%d_u%02d%s\"))) %s;\n",
+	printf("EXPORT CONST %s Sleef_%s%s%d_u%02d(%s) __attribute__((alias(\"\\0Sleef_%s%s%d_u%02d%s@@%d\"))) %s;\n",
 	       returnType[funcList[i].funcType],
 	       funcList[i].name, typeSpec[fptype], vw, funcList[i].ulp,
 	       argType0[funcList[i].funcType],
-	       funcList[i].name, typeSpec[fptype], vw, funcList[i].ulp, isaname, vectorcc
+	       funcList[i].name, typeSpec[fptype], vw, funcList[i].ulp, isaname,
+	       vw * (fptype + 1) * 4, vectorcc
 	       );
       } else {
-	printf("EXPORT CONST %s Sleef_%s%s%d(%s) __attribute__((alias(\"Sleef_%s%s%d_%s\"))) %s;\n",
+	printf("EXPORT CONST %s Sleef_%s%s%d(%s) __attribute__((alias(\"\\0Sleef_%s%s%d_%s@@%d\"))) %s;\n",
 	       returnType[funcList[i].funcType],
 	       funcList[i].name, typeSpec[fptype], vw,
 	       argType0[funcList[i].funcType],
-	       funcList[i].name, typeSpec[fptype], vw, isaname, vectorcc
+	       funcList[i].name, typeSpec[fptype], vw, isaname,
+	       vw * (fptype + 1) * 4, vectorcc
 	       );
       }
     }
diff --git a/src/libm/mkrename.c b/src/libm/mkrename.c
index 08fdf01..74aa47d 100644
--- a/src/libm/mkrename.c
+++ b/src/libm/mkrename.c
@@ -136,7 +136,7 @@ int main(int argc, char **argv) {
     if (strcmp(isaname, "sve") == 0)
       wdp = wsp = "x";
 
-    char * vectorcc = "";
+    char * vectorcc = " __attribute__((vectorcall))";
     #ifdef ENABLE_AAVPCS
     if (strcmp(isaname, "advsimd") == 0)
       vectorcc =" __attribute__((aarch64_vector_pcs))";
diff --git a/src/libm/sleefsimddp.c b/src/libm/sleefsimddp.c
index 9227c27..5d349f0 100644
--- a/src/libm/sleefsimddp.c
+++ b/src/libm/sleefsimddp.c
@@ -3452,11 +3452,11 @@ EXPORT CONST VECTOR_CC vdouble xerfc_u15(vdouble a) {
 // Sleef_cinz_sincospid2_u05sse2) by rename*.h.
 
 #ifdef ENABLE_ALIAS
-#define DALIAS_vd_vd(FUNC) EXPORT CONST VECTOR_CC vdouble y ## FUNC(vdouble) __attribute__((alias( stringify(x ## FUNC) )));
-#define DALIAS_vd2_vd(FUNC) EXPORT CONST VECTOR_CC vdouble2 y ## FUNC(vdouble) __attribute__((alias( stringify(x ## FUNC) )));
-#define DALIAS_vi_vd(FUNC) EXPORT CONST VECTOR_CC vint y ## FUNC(vdouble) __attribute__((alias( stringify(x ## FUNC) )));
-#define DALIAS_vd_vd_vd(FUNC) EXPORT CONST VECTOR_CC vdouble y ## FUNC(vdouble, vdouble) __attribute__((alias( stringify(x ## FUNC) )));
-#define DALIAS_vd_vd_vd_vd(FUNC) EXPORT CONST VECTOR_CC vdouble y ## FUNC(vdouble, vdouble, vdouble) __attribute__((alias( stringify(x ## FUNC) )));
+#define DALIAS_vd_vd(FUNC) EXPORT CONST VECTOR_CC vdouble y ## FUNC(vdouble) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_D1)));
+#define DALIAS_vd2_vd(FUNC) EXPORT CONST VECTOR_CC vdouble2 y ## FUNC(vdouble) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_D1)));
+#define DALIAS_vi_vd(FUNC) EXPORT CONST VECTOR_CC vint y ## FUNC(vdouble) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_D1)));
+#define DALIAS_vd_vd_vd(FUNC) EXPORT CONST VECTOR_CC vdouble y ## FUNC(vdouble, vdouble) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_D2)));
+#define DALIAS_vd_vd_vd_vd(FUNC) EXPORT CONST VECTOR_CC vdouble y ## FUNC(vdouble, vdouble, vdouble) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_D3)));
 #else
 #define DALIAS_vd_vd(FUNC) EXPORT CONST VECTOR_CC vdouble y ## FUNC(vdouble d) { return x ## FUNC (d); }
 #define DALIAS_vd2_vd(FUNC) EXPORT CONST VECTOR_CC vdouble2 y ## FUNC(vdouble d) { return x ## FUNC (d); }
diff --git a/src/libm/sleefsimdsp.c b/src/libm/sleefsimdsp.c
index c3dc608..ecae431 100644
--- a/src/libm/sleefsimdsp.c
+++ b/src/libm/sleefsimdsp.c
@@ -3005,10 +3005,10 @@ EXPORT CONST VECTOR_CC vfloat xerfcf_u15(vfloat a) {
 // See sleefsimddp.c for explanation of these macros
 
 #ifdef ENABLE_ALIAS
-#define DALIAS_vf_vf(FUNC) EXPORT CONST VECTOR_CC vfloat y ## FUNC(vfloat) __attribute__((alias( stringify(x ## FUNC) )));
-#define DALIAS_vf2_vf(FUNC) EXPORT CONST VECTOR_CC vfloat2 y ## FUNC(vfloat) __attribute__((alias( stringify(x ## FUNC) )));
-#define DALIAS_vf_vf_vf(FUNC) EXPORT CONST VECTOR_CC vfloat y ## FUNC(vfloat, vfloat) __attribute__((alias( stringify(x ## FUNC) )));
-#define DALIAS_vf_vf_vf_vf(FUNC) EXPORT CONST VECTOR_CC vfloat y ## FUNC(vfloat, vfloat, vfloat) __attribute__((alias( stringify(x ## FUNC) )));
+#define DALIAS_vf_vf(FUNC) EXPORT CONST VECTOR_CC vfloat y ## FUNC(vfloat) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_F1)));
+#define DALIAS_vf2_vf(FUNC) EXPORT CONST VECTOR_CC vfloat2 y ## FUNC(vfloat) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_F1)));
+#define DALIAS_vf_vf_vf(FUNC) EXPORT CONST VECTOR_CC vfloat y ## FUNC(vfloat, vfloat) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_F2)));
+#define DALIAS_vf_vf_vf_vf(FUNC) EXPORT CONST VECTOR_CC vfloat y ## FUNC(vfloat, vfloat, vfloat) __attribute__((alias("\01" stringify(x ## FUNC) SUFFIX_F3)));
 #else
 #define DALIAS_vf_vf(FUNC) EXPORT CONST VECTOR_CC vfloat y ## FUNC(vfloat d) { return x ## FUNC (d); }
 #define DALIAS_vf2_vf(FUNC) EXPORT CONST VECTOR_CC vfloat2 y ## FUNC(vfloat d) { return x ## FUNC (d); }
-- 
2.16.1

